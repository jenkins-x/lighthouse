git:
  # -- Git SCM provider (`github`, `gitlab`, `stash`)
  kind: github

  # -- Git server URL
  server: ""

# -- Namespace where `LighthouseJob`s and `Pod`s are created
# @default -- Deployment namespace
lighthouseJobNamespace: ""

githubApp:
  # -- Enables GitHub app authentication
  enabled: false

  # -- GitHub app user name
  username: "jenkins-x[bot]"

# -- Git user name (used when GitHub app authentication is not enabled)
user: ""

# -- Git token (used when GitHub app authentication is not enabled)
oauthToken: ""

# -- Secret used for webhooks
hmacToken: ""

# -- Enables the use of a hmac token. This should always be enabled if possible - though some git providers don't support it such as bitbucket cloud
hmacTokenEnabled: true

# -- Log format
logFormat: "json"

cluster:
  crds:
    # -- Create custom resource definitions
    create: true

image:
  # -- Docker registry to pull images from
  parentRepository: gcr.io/jenkinsxio

  # -- Docker images tag
  tag: 0.0.750

  # -- Image pull policy
  pullPolicy: IfNotPresent

# -- Environment variables
env:
  JX_DEFAULT_IMAGE: ""

gcJobs:
  # -- Max age from which `LighthouseJob`s will be deleted
  maxAge: 168h

  # -- Cron expression to periodically delete `LighthouseJob`s
  schedule: "0/30 * * * *"

  # -- Drives the failed jobs history limit
  failedJobsHistoryLimit: 1

  #  -- Drives the successful jobs history limit
  successfulJobsHistoryLimit: 3

  # -- Drives the job's concurrency policy
  concurrencyPolicy: Forbid

  image:
    # -- Template for computing the gc job docker image repository
    repository: "{{ .Values.image.parentRepository }}/lighthouse-gc-jobs"

    # -- Template for computing the gc job docker image tag
    tag: "{{ .Values.image.tag }}"

    # -- Template for computing the gc job docker image pull policy
    pullPolicy: "{{ .Values.image.pullPolicy }}"

webhooks:
  # -- Number of replicas
  replicaCount: 1

  # -- Termination grace period for webhooks pods
  terminationGracePeriodSeconds: 180

  image:
    # -- Template for computing the webhooks controller docker image repository
    repository: "{{ .Values.image.parentRepository }}/lighthouse-webhooks"

    # -- Template for computing the webhooks controller docker image tag
    tag: "{{ .Values.image.tag }}"

    # -- Template for computing the webhooks controller docker image pull policy
    pullPolicy: "{{ .Values.image.pullPolicy }}"

  # -- allow optional labels to be added to the webhook deployment
  labels: {}

  # -- Annotations applied to the webhooks pods
  podAnnotations: {}

  # -- Allows overriding the service name, this is here for compatibility reasons, regular users should clear this out
  serviceName: hook

  # -- Service settings for the webhooks controller
  service:
    type: ClusterIP
    externalPort: 80
    internalPort: 8080
    annotations: {}

  resources:
    # -- Resource limits applied to the webhooks pods
    limits:
      cpu: 100m
      # may require more memory to perform the initial 'git clone' cmd for big repositories
      memory: 512Mi

    # -- Resource requests applied to the webhooks pods
    requests:
      cpu: 80m
      memory: 128Mi

  # -- Liveness and readiness probes settings
  probe:
    path: /

  # -- Liveness probe configuration
  livenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  # -- Readiness probe configuration
  readinessProbe:
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  # -- [Node selector](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector) applied to the webhooks pods
  nodeSelector: {}

  # -- [Affinity rules](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity) applied to the webhooks pods
  affinity: {}

  # -- [Tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) applied to the webhooks pods
  tolerations: []

  ingress:
    # -- Enable webhooks ingress
    enabled: false

    # -- Webhooks ingress annotations
    annotations: {}

    # -- Webhooks ingress host names
    hosts: []

  # -- deployments can configure the ability to allow custom lighthouse triggers
  # using their own unique chat prefix, for example extending the default `/test` trigger prefix let them specify
  # `customDeploymentTriggerPrefix: foo` which means they can also use their own custom trigger /foo mycoolthing
  customDeploymentTriggerCommand: ""

foghorn:
  # -- Number of replicas
  replicaCount: 1

  # -- Termination grace period for foghorn pods
  terminationGracePeriodSeconds: 180

  image:
    # -- Template for computing the foghorn controller docker image repository
    repository: "{{ .Values.image.parentRepository }}/lighthouse-foghorn"

    # -- Template for computing the foghorn controller docker image tag
    tag: "{{ .Values.image.tag }}"

    # -- Template for computing the foghorn controller docker image pull policy
    pullPolicy: "{{ .Values.image.pullPolicy }}"

  resources:
    # -- Resource limits applied to the foghorn pods
    limits:
      cpu: 100m
      memory: 256Mi

    # -- Resource requests applied to the foghorn pods
    requests:
      cpu: 80m
      memory: 128Mi

  # -- [Node selector](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector) applied to the foghorn pods
  nodeSelector: {}

  # -- [Affinity rules](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity) applied to the foghorn pods
  affinity: {}

  # -- [Tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) applied to the foghorn pods
  tolerations: []

tektoncontroller:
  # -- the dashboard URL (e.g. Tekton dashboard)
  dashboardURL: ""
  # -- Go template expression for URLs in the dashboard if not using Tekton dashboard
  dashboardTemplate: ""

  # -- Number of replicas
  replicaCount: 1

  # -- Termination grace period for tekton controller pods
  terminationGracePeriodSeconds: 180

  image:
    # -- Template for computing the tekton controller docker image repository
    repository: "{{ .Values.image.parentRepository }}/lighthouse-tekton-controller"

    # -- Template for computing the tekton controller docker image tag
    tag: "{{ .Values.image.tag }}"

    # -- Template for computing the tekton controller docker image pull policy
    pullPolicy: "{{ .Values.image.pullPolicy }}"

  # -- Annotations applied to the tekton controller pods
  podAnnotations: {}

  # -- [Node selector](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector) applied to the tekton controller pods
  nodeSelector: {}

  # -- [Affinity rules](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity) applied to the tekton controller pods
  affinity: {}

  # -- [Tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) applied to the tekton controller pods
  tolerations: []

  resources:
    # -- Resource limits applied to the tekton controller pods
    limits:
      cpu: 100m
      memory: 256Mi

    # -- Resource requests applied to the tekton controller pods
    requests:
      cpu: 80m
      memory: 128Mi

  # -- Service settings for the tekton controller
  service:
    annotations: {}

jenkinscontroller:
  # -- The URL of the Jenkins instance
  jenkinsURL:

  # -- The username for the Jenkins user
  jenkinsUser:

  # -- The token for authenticating the Jenkins user
  jenkinsToken:

  # -- Termination grace period for tekton controller pods
  terminationGracePeriodSeconds: 180

  image:
    # -- Template for computing the Jenkins controller docker image repository
    repository: "{{ .Values.image.parentRepository }}/lighthouse-jenkins-controller"

    # -- Template for computing the tekton controller docker image tag
    tag: "{{ .Values.image.tag }}"

    # -- Template for computing the tekton controller docker image pull policy
    pullPolicy: "{{ .Values.image.pullPolicy }}"

  # -- Annotations applied to the tekton controller pods
  podAnnotations: {}

  # -- [Node selector](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector) applied to the tekton controller pods
  nodeSelector: {}

  # -- [Affinity rules](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity) applied to the tekton controller pods
  affinity: {}

  # -- [Tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) applied to the tekton controller pods
  tolerations: []

  resources:
    # -- Resource limits applied to the tekton controller pods
    limits:
      cpu: 100m
      memory: 256Mi

    # -- Resource requests applied to the tekton controller pods
    requests:
      cpu: 80m
      memory: 128Mi

  # -- Service settings for the tekton controller
  service:
    annotations: {}

keeper:
  # -- Label used to report status to git provider
  statusContextLabel: "Lighthouse Merge Status"

  # -- Number of replicas
  replicaCount: 1

  # -- Termination grace period for keeper pods
  terminationGracePeriodSeconds: 30

  image:
    # -- Template for computing the keeper controller docker image repository
    repository: "{{ .Values.image.parentRepository }}/lighthouse-keeper"

    # -- Template for computing the keeper controller docker image tag
    tag: "{{ .Values.image.tag }}"

    # -- Template for computing the keeper controller docker image pull policy
    pullPolicy: "{{ .Values.image.pullPolicy }}"

  # -- Annotations applied to the keeper pods
  podAnnotations: {}

  # -- Lets you define keeper specific environment variables
  env: {}

  # -- Service settings for the webhooks controller
  service:
    type: ClusterIP
    externalPort: 80
    internalPort: 8888

  resources:
    # -- Resource limits applied to the keeper pods
    limits:
      cpu: 400m
      memory: 512Mi

    # -- Resource requests applied to the keeper pods
    requests:
      cpu: 100m
      memory: 128Mi

  # -- Liveness and readiness probes settings
  probe:
    path: /

  # -- Liveness probe configuration
  livenessProbe:
    initialDelaySeconds: 120
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  # -- Readiness probe configuration
  readinessProbe:
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  datadog:
    # -- Enables datadog
    enabled: "true"

  # -- [Node selector](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector) applied to the keeper pods
  nodeSelector: {}

  # -- [Affinity rules](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity) applied to the keeper pods
  affinity: {}

  # -- [Tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) applied to the keeper pods
  tolerations: []

engines:
  # -- Enables the jx engine
  jx: true

  # -- Enables the tekton engine
  tekton: false

  # -- Enables the Jenkins engine
  jenkins: false

configMaps:
  # -- Enables creation of `config.yaml` and `plugins.yaml` config maps
  create: false

  # -- Raw `config.yaml` content
  config: null

  # -- Raw `plugins.yaml` content
  plugins: null

  # -- Settings used to configure the `config-updater` plugin
  configUpdater:
    orgAndRepo: ""
    path: ""
  # Example of specifying config-updater repository, which should contain "config.yaml" and "plugins.yaml" in the given path.
  # configUpdater:
  #   orgAndRepo: foo/bar
  #   path: a/b/c
