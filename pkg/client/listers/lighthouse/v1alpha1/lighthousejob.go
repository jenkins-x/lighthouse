// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/jenkins-x/lighthouse/pkg/apis/lighthouse/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// LighthouseJobLister helps list LighthouseJobs.
// All objects returned here must be treated as read-only.
type LighthouseJobLister interface {
	// List lists all LighthouseJobs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.LighthouseJob, err error)
	// LighthouseJobs returns an object that can list and get LighthouseJobs.
	LighthouseJobs(namespace string) LighthouseJobNamespaceLister
	LighthouseJobListerExpansion
}

// lighthouseJobLister implements the LighthouseJobLister interface.
type lighthouseJobLister struct {
	indexer cache.Indexer
}

// NewLighthouseJobLister returns a new LighthouseJobLister.
func NewLighthouseJobLister(indexer cache.Indexer) LighthouseJobLister {
	return &lighthouseJobLister{indexer: indexer}
}

// List lists all LighthouseJobs in the indexer.
func (s *lighthouseJobLister) List(selector labels.Selector) (ret []*v1alpha1.LighthouseJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LighthouseJob))
	})
	return ret, err
}

// LighthouseJobs returns an object that can list and get LighthouseJobs.
func (s *lighthouseJobLister) LighthouseJobs(namespace string) LighthouseJobNamespaceLister {
	return lighthouseJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// LighthouseJobNamespaceLister helps list and get LighthouseJobs.
// All objects returned here must be treated as read-only.
type LighthouseJobNamespaceLister interface {
	// List lists all LighthouseJobs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.LighthouseJob, err error)
	// Get retrieves the LighthouseJob from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.LighthouseJob, error)
	LighthouseJobNamespaceListerExpansion
}

// lighthouseJobNamespaceLister implements the LighthouseJobNamespaceLister
// interface.
type lighthouseJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all LighthouseJobs in the indexer for a given namespace.
func (s lighthouseJobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.LighthouseJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LighthouseJob))
	})
	return ret, err
}

// Get retrieves the LighthouseJob from the indexer for a given namespace and name.
func (s lighthouseJobNamespaceLister) Get(name string) (*v1alpha1.LighthouseJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("lighthousejob"), name)
	}
	return obj.(*v1alpha1.LighthouseJob), nil
}
