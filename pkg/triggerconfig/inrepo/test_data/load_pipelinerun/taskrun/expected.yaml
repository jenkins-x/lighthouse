apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
spec:
  params:
  - name: PARAM
    value: $(params.PARAM)
  pipelineSpec:
    params:
    - default: param-value
      name: PARAM
    tasks:
    - params:
      - name: PARAM
        value: $(params.PARAM)
      taskSpec:
        params:
        - default: param-value
          name: PARAM
        steps:
        - image: ubuntu
          name: noshebang
          resources: {}
          script: echo "no shebang"
        - env:
          - name: FOO
            value: foooooooo
          image: ubuntu
          name: bash
          resources: {}
          script: |
            #!/usr/bin/env bash
            set -euxo pipefail
            echo "Hello from Bash!"
            echo FOO is ${FOO}
            echo substring is ${FOO:2:4}
            for i in {1..10}; do
              echo line $i
            done
        - image: ubuntu
          name: place-file
          resources: {}
          script: |
            #!/usr/bin/env bash
            echo "echo Hello from script file" > /workspace/hello
            chmod +x /workspace/hello
        - image: ubuntu
          name: run-file
          resources: {}
          script: |
            #!/usr/bin/env bash
            /workspace/hello
        - image: ubuntu
          name: contains-eof
          resources: {}
          script: |
            #!/usr/bin/env bash
            cat > file << EOF
            this file has some contents
            EOF
            cat file
        - image: node
          name: node
          resources: {}
          script: |
            #!/usr/bin/env node
            console.log("Hello from Node!")
        - image: python
          name: python
          resources: {}
          script: |
            #!/usr/bin/env python3
            print("Hello from Python!")
        - image: perl
          name: perl
          resources: {}
          script: |
            #!/usr/bin/perl
            print "Hello from Perl!"
        - image: python
          name: params-applied
          resources: {}
          script: |
            #!/usr/bin/env python3
            v = '$(params.PARAM)'
            if v != 'param-value':
              print('Param values not applied')
              print('Got: ', v)
              exit(1)
        - args:
          - hello
          - world
          image: ubuntu
          name: args-allowed
          resources: {}
          script: |-
            #!/usr/bin/env bash
            [[ $# == 2 ]]
            [[ $1 == "hello" ]]
            [[ $2 == "world" ]]
status: {}
